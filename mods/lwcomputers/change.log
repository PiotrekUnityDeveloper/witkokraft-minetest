
v 0.1.0
*	initial alpha


v 0.1.1
*	fixed not returning correct time.
*	fixed os.time.
*	fixed fs.path_folder.
*	moved environs to os.environs.
*	added os.envstr.
*	added fs.abs_path.
*	fs.path_extension returns "" if no extension. nil only if malformed.
*	added LOS cli os disk.


v0.1.2
*	added digiswitch.
*	improved fs.file_size returns total byte size of directories.
*	added fs.disk_free
*	added fs.disk_size
*	implemented maximum disk byte sizes, settable through mod settings.
*	implemented maximum disk items, settable through mod settings.
*	added printer, pages and books.
*	added selective event to os.peek_event and os.get_event
*	bug fixes to filesys class.
*	fixed bug called modules not yielding if run too long.
*	added print program to LOS disk.
*	improvements to LOS ls and dump.
*	more work on time/date.


v0.1.3
*	reduced size of computer formspec data to try and speed it up.
*	added check for file path not below root.


v0.1.4
*	added mesecon event (power to side).


v0.1.5
*	fixed no duplicates in creative mode.
*	minor fixes.
*	added option to store disk data in meta data instead of world folder.


v0.1.6
*	added robots
*	bug fixes


v0.1.7
*	added ownership
		+ security.add_access (name)
		+ security.remove_access (name)
		+ security.access_list ()
		+ security.owner ()
*	added robot.trash ()
*	added robot.drop ()
*	code cleanup
*	added mod api - see docs/mod_api.txt
*	added os.paste_from_clipboard ()
*	fixed server crash when book is dropped.
*	fixed server crash when clipboard dropped.
*	fixed server crash when computer or floppy disk dropped.
*	added install program to los disk.
*	added trash item


v0.1.8
*	changed robot's appearance.
*	added lwcomputers:touchscreen (copy of digistuff:touchscreen as full sized node)
*	added lwcomputers:panel (copy of digistuff:panel as full sized node)
*	renamed mesecon interface and event to mesecons.
*	added mesecons listen to LOS disk.


v0.1.9
*	improved sand-boxing of computers.
*	sped up file:write ().
*	added robot.room_for ()
*	added robot.cur_pos ()
*	robots remember persistence when moved
*	param2 passed to robot.place_<side> changed to direction, adjusts to direction of robot.
*	changed left/right orientation - as computer/robot faces.
*	fixed robots not restarting on world startup.
*	changed robot's appearance.
*	added entry to place_substitute.lua - ["default:torch"] = "default:torch_wall"
	this is usually the one.


v0.1.10
*	fixed lua disk and los disk crafting.


v0.1.11
*	fixed persistence failing after time.


v0.1.12
*	fixed robot.detect, robot.dig, robot.place, robot.put, robot.pull and
	robot.find_inventory failing when out of active range with persistence.


v0.1.13
*	bug fixes.
*	added diagonal direction operations to robot operations.


v0.1.14
*	added movefloor.
*	added side "switch" to digiswitch.


v0.1.15
*	Adjoining movefloor blocks act as a single group.
*	Added solid color conductor blocks.


v0.1.16
*	Added digilines graphical screens.


v0.1.17
*	Bug fix digilines graphical screens.


v0.1.18
*	Added monitors.


v0.1.19
*	Added multi-monitor interface.
*	Altered groups for digiscreens and monitors (now breakable by hand).
*	Changed term.clear default colors to currently set colors.

v0.1.20
*	Added on_blast handler to ensure removal of disk folder.


v0.1.21
*	Fixed lighting.
*	Added os.chat.
*	Added Allow chat setting.
*	Added Allow public chat setting.
*	Fixed movefloor dependency on mesecons_mvps.


v0.1.22
*	Increased dimension of monitor to improve accuracy of touch event.


v0.1.23
*	Depreciated digiswitch, movefloor, extras, solid_conductor (moved to lwcomponents).


v0.1.24
*	Added directional options to place_substitute.lua.
*	Updated place_substitute.lua with new farming plants.
*	Improved placement.
*	Added Use mod on_place setting.


v0.1.25
*	Improved item drop and place.


v0.1.26
*	Fixed bug in node placement.
*	Fixed bug when dropping from storage overflow when digging.
*	Fixed crafting group bug.


v0.1.27
*	Improved support of param2 for placed nodes (pallet index is used as well).


v0.2.0
*	Removed dependency lwdrops.
*	Removed metadata disk option.
*	Books can now have a max of 12 pages.
*	Max clipboard size reduced to 48000
*	Less disposal options to remove redundant disk data.


v0.2.1
*	Implemented conversion to new page/book encoding:
	If a page or book is used it is convereted.
	If a page or book is dropped by a player it is convereted.
	If a page or book is dropped by a mod component that calls on_drop it is convereted.
	Any books that are converted will only retain the first 12 pages.


v0.2.2
*	Robots cannot dig nodes with group 'unbreakable'.


v0.2.3
*	Fixed crash if digiscreens are given nil for a pixel.


v0.2.4
*	Fixed bug undeclared global in filesys.lua
*	Fixed missing texture in monitors.


v0.2.5
*	Added short description to printed pages and books.
*	Bug fixes and code cleanup.
*	Added farming:sunflower to place_substitutes.lua.


v0.2.6
*	Fixed security issues with setfenv, getfenv, setmetatable, getmetatable
	rawget, rawset, rawequal.


v0.2.7
*	Fixed numeric indexing for getfenv amd setfenv.


v0.2.8
*	Fixed disk root folder for local installs.
*	Removed filesys_meta.lua from project
*	Added support for lwwires.
*	Added utils.dump () to computer's api.


v0.2.9
*	Added os.version () to computer's api.
*	Added error check for file class when not called as class.
*	Added parameter validation to monitor.get_char () and monitors.get_char ().
*	Added visible cursor to monitor interface (inverted colors, doesn't blink).
*	Added os.remove_event () to computer's api.
*	Fixed printer's empty slot query.
*	Added Clear button to printers (ejects page when started but not finished).
*	Shift key automatically cancels on next character key press. If double
	clicked stays on, only first of double click sends key event.
*	Fixed bug with error message failing to prep floppy.
*	Added scale 0.3 and 0.6 to monitors (res 3x2 and 6x4).
*	Added os.has_clipboard () to computer's api.
* 	Increased width of clipboard. If mt ver >= 5.4.0 font is mono.
*	Added Awake on event setting. If true, the computer processes events
	when unloaded. This allows computers to process wireless, digilines,
	mesecons, timer, bundle_on and bundle_off messages without making the
	computer persistent. Running continues until the computer's event queue
	is empty.
*	Added os.clock_speed () to computer's api.
*	Improved file opening time.
